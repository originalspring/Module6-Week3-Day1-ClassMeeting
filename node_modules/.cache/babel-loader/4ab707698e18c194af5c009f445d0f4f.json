{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport GraphNode from './GraphNode';\nexport var isMaterialNode = Symbol('isMaterialNode');\nexport var MaterialNode = /*#__PURE__*/function (_GraphNode) {\n  _inherits(MaterialNode, _GraphNode);\n  var _super = _createSuper(MaterialNode);\n  function MaterialNode() {\n    var _this;\n    _classCallCheck(this, MaterialNode);\n    _this = _super.call(this);\n    _this[isMaterialNode] = true;\n    _this.program = null;\n    return _this;\n  }\n  _createClass(MaterialNode, [{\n    key: \"applyProps\",\n    value: function applyProps(nextprops) {\n      var prevProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.applyMatrixProps(nextprops, prevProps);\n      if (nextprops.program) {\n        this.program = nextprops.program;\n      }\n    }\n  }]);\n  return MaterialNode;\n}(GraphNode);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAIA,OAAO,IAAMC,cAAc,GAAGC,MAAM,CAAC,gBAAD,CAA7B;AAEP,WAAaC,YAAb;EAAAC;EAAA;EACE,wBAAc;IAAA;IAAAC;IACZC;IADYA,MAIbL,cAJa,IAIK,IAJL;IAAAK,MAKdC,OALc,GAKiB,IALjB;IAAA;EAEb;EAHHC;IAAAC;IAAAC,2BAQaC,SARb,EAQ8E;MAAA,IAAnCC,SAAmC,uEAAJ,EAAI;MAC1E,KAAKC,gBAAL,CAAsBF,SAAtB,EAAiCC,SAAjC;MAEA,IAAID,SAAS,CAACJ,OAAd,EAAuB;QACrB,KAAKA,OAAL,GAAeI,SAAS,CAACJ,OAAzB;MACD;IACF;EAdH;EAAA;AAAA,EAAkCP,SAAlC","names":["GraphNode","isMaterialNode","Symbol","MaterialNode","_inherits","_classCallCheck","_this","program","_createClass","key","value","nextprops","prevProps","applyMatrixProps"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/core/src/sceneGraph/MaterialNode.ts"],"sourcesContent":["import GraphNode from './GraphNode'\n\nimport { MaterialNodeProps } from '../types'\n\nexport const isMaterialNode = Symbol('isMaterialNode')\n\nexport class MaterialNode extends GraphNode {\n  constructor() {\n    super()\n  }\n\n  [isMaterialNode] = true\n  program: WebGLProgram | null = null\n\n  applyProps(nextprops: MaterialNodeProps, prevProps: MaterialNodeProps = {}) {\n    this.applyMatrixProps(nextprops, prevProps)\n\n    if (nextprops.program) {\n      this.program = nextprops.program\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}