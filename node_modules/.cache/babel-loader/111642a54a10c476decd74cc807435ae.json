{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useProgram, useUniform1f, useUniform2fv, useUniform3fv, useWebGLContext, useUniformSampler2d, usePointLightCount, usePointLightUniforms } from '@react-vertex/core';\nimport solidVert from './solid.vert';\nimport solidFrag from './solid.frag';\nimport texturedVert from './textured.vert';\nimport texturedFrag from './textured.frag';\nimport attenuatedVert from './attenuated.vert';\nimport attenuatedFrag from './attenuated.frag';\nvar defaultKd = [1.0, 1.0, 1.0];\nvar defaultKs = [0.6, 0.6, 0.6];\nvar defaultNs = 500;\nvar defaultKa = [1.0, 1.0, 1.0];\nvar defaultNa = 0;\nexport function usePhongSolid(kd, na, ns, ka, ks) {\n  _s();\n  var gl = useWebGLContext();\n  var _usePointLightCount = usePointLightCount(solidVert, solidFrag),\n    _usePointLightCount2 = _slicedToArray(_usePointLightCount, 2),\n    vert = _usePointLightCount2[0],\n    frag = _usePointLightCount2[1];\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniform1f(gl, program, 'uNs', ns || defaultNs);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd);\n  useUniform3fv(gl, program, 'uKs', ks || defaultKs);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  return program;\n}\n_s(usePhongSolid, \"JSBVHTh7uanLfptBsMNLwDQqHZM=\", false, function () {\n  return [useWebGLContext, usePointLightCount, useProgram, usePointLightUniforms, useUniform1f, useUniform1f, useUniform3fv, useUniform3fv, useUniform3fv];\n});\nvar uVScale = [1.0, 1.0];\nexport function usePhongTextured(mapKd, na, ns, ka, ks) {\n  _s2();\n  var gl = useWebGLContext();\n  var _usePointLightCount3 = usePointLightCount(texturedVert, texturedFrag),\n    _usePointLightCount4 = _slicedToArray(_usePointLightCount3, 2),\n    vert = _usePointLightCount4[0],\n    frag = _usePointLightCount4[1];\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniformSampler2d(gl, program, 'mapKd', mapKd);\n  useUniform1f(gl, program, 'uNs', ns || defaultNs);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform2fv(gl, program, 'uVScale', uVScale);\n  useUniform3fv(gl, program, 'uKs', ks || defaultKs);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  return program;\n}\n_s2(usePhongTextured, \"q5WhxvJYX+m5HvwaiWEFxYw1DzQ=\", false, function () {\n  return [useWebGLContext, usePointLightCount, useProgram, usePointLightUniforms, useUniformSampler2d, useUniform1f, useUniform1f, useUniform2fv, useUniform3fv, useUniform3fv];\n});\nexport function usePhongAttenuated(lightPosition, mapKd) {\n  _s3();\n  var gl = useWebGLContext();\n  var program = useProgram(gl, attenuatedVert, attenuatedFrag);\n  useUniform3fv(gl, program, 'uLightPosition', lightPosition);\n  useUniformSampler2d(gl, program, 'texDiff', mapKd);\n  return program;\n}\n_s3(usePhongAttenuated, \"+MoOugExmQdx8SCAWA391hk8x8g=\", false, function () {\n  return [useWebGLContext, useProgram, useUniform3fv, useUniformSampler2d];\n});","map":{"version":3,"mappings":"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","names":["useProgram","useUniform1f","useUniform2fv","useUniform3fv","useWebGLContext","useUniformSampler2d","usePointLightCount","usePointLightUniforms","solidVert","solidFrag","texturedVert","texturedFrag","attenuatedVert","attenuatedFrag","defaultKd","defaultKs","defaultNs","defaultKa","defaultNa","usePhongSolid","kd","na","ns","ka","ks","gl","_usePointLightCount2","vert","frag","program","uVScale","usePhongTextured","mapKd","_usePointLightCount4","usePhongAttenuated","lightPosition"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/material-hooks/src/phong/index.ts"],"sourcesContent":["import {\n  useProgram,\n  useUniform1f,\n  useUniform2fv,\n  useUniform3fv,\n  useWebGLContext,\n  useUniformSampler2d,\n  usePointLightCount,\n  usePointLightUniforms,\n} from '@react-vertex/core'\nimport solidVert from './solid.vert'\nimport solidFrag from './solid.frag'\nimport texturedVert from './textured.vert'\nimport texturedFrag from './textured.frag'\nimport attenuatedVert from './attenuated.vert'\nimport attenuatedFrag from './attenuated.frag'\n\nconst defaultKd = [1.0, 1.0, 1.0]\nconst defaultKs = [0.6, 0.6, 0.6]\nconst defaultNs = 500\nconst defaultKa = [1.0, 1.0, 1.0]\nconst defaultNa = 0\n\nexport function usePhongSolid(\n  kd?: number[],\n  na?: number,\n  ns?: number,\n  ka?: number[],\n  ks?: number[],\n) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(solidVert, solidFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniform1f(gl, program, 'uNs', ns || defaultNs)\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd)\n  useUniform3fv(gl, program, 'uKs', ks || defaultKs)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  return program\n}\n\nconst uVScale = [1.0, 1.0]\n\nexport function usePhongTextured(\n  mapKd: WebGLTexture | null,\n  na?: number,\n  ns?: number,\n  ka?: number[],\n  ks?: number[],\n) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(texturedVert, texturedFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniformSampler2d(gl, program, 'mapKd', mapKd)\n\n  useUniform1f(gl, program, 'uNs', ns || defaultNs)\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n\n  useUniform2fv(gl, program, 'uVScale', uVScale)\n\n  useUniform3fv(gl, program, 'uKs', ks || defaultKs)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  return program\n}\n\nexport function usePhongAttenuated(\n  lightPosition: number[],\n  mapKd: WebGLTexture | null,\n) {\n  const gl = useWebGLContext()\n  const program = useProgram(gl, attenuatedVert, attenuatedFrag)\n\n  useUniform3fv(gl, program, 'uLightPosition', lightPosition)\n\n  useUniformSampler2d(gl, program, 'texDiff', mapKd)\n\n  return program\n}\n"]},"metadata":{},"sourceType":"module"}