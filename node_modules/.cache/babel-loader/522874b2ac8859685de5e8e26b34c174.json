{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport Node from './GraphNode';\nexport var isGeometryNode = Symbol('isGeometryNode');\nexport var GeometryNode = /*#__PURE__*/function (_Node) {\n  _inherits(GeometryNode, _Node);\n  var _super = _createSuper(GeometryNode);\n  function GeometryNode() {\n    var _this;\n    _classCallCheck(this, GeometryNode);\n    _this = _super.call(this);\n    _this.index = void 0;\n    _this.attributes = void 0;\n    _this.drawArrays = void 0;\n    _this.drawElements = void 0;\n    _this[isGeometryNode] = true;\n    _this.index = 0;\n    _this.attributes = {};\n    return _this;\n  }\n  _createClass(GeometryNode, [{\n    key: \"applyProps\",\n    value: function applyProps(nextprops) {\n      var prevProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.applyMatrixProps(nextprops, prevProps);\n      if (nextprops.index !== undefined) {\n        this.index = nextprops.index;\n      }\n      if (nextprops.attributes !== undefined) {\n        this.attributes = nextprops.attributes;\n      }\n      this.drawArrays = nextprops.drawArrays;\n      this.drawElements = nextprops.drawElements;\n    }\n  }]);\n  return GeometryNode;\n}(Node);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AASA,OAAO,IAAMC,cAAc,GAAGC,MAAM,CAAC,gBAAD,CAA7B;AAEP,WAAaC,YAAb;EAAAC;EAAA;EAME,wBAAc;IAAA;IAAAC;IACZC;IADYA,MALdC,KAKc;IAAAD,MAJdE,UAIc;IAAAF,MAHdG,UAGc;IAAAH,MAFdI,YAEc;IAAAJ,MAObL,cAPa,IAOK,IAPL;IAGZK,MAAKC,KAAL,GAAa,CAAb;IACAD,MAAKE,UAAL,GAAkB,EAAlB;IAJY;EAKb;EAXHG;IAAAC;IAAAC,2BAeaC,SAfb,EAe8E;MAAA,IAAnCC,SAAmC,uEAAJ,EAAI;MAC1E,KAAKC,gBAAL,CAAsBF,SAAtB,EAAiCC,SAAjC;MAEA,IAAID,SAAS,CAACP,KAAV,KAAoBU,SAAxB,EAAmC;QACjC,KAAKV,KAAL,GAAaO,SAAS,CAACP,KAAvB;MACD;MAED,IAAIO,SAAS,CAACN,UAAV,KAAyBS,SAA7B,EAAwC;QACtC,KAAKT,UAAL,GAAkBM,SAAS,CAACN,UAA5B;MACD;MAED,KAAKC,UAAL,GAAkBK,SAAS,CAACL,UAA5B;MACA,KAAKC,YAAL,GAAoBI,SAAS,CAACJ,YAA9B;IACD;EA5BH;EAAA;AAAA,EAAkCV,IAAlC","names":["Node","isGeometryNode","Symbol","GeometryNode","_inherits","_classCallCheck","_this","index","attributes","drawArrays","drawElements","_createClass","key","value","nextprops","prevProps","applyMatrixProps","undefined"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/core/src/sceneGraph/GeometryNode.ts"],"sourcesContent":["import Node from './GraphNode'\n\nimport {\n  GeometryNodeProps,\n  GeometryAttributes,\n  GeometryDrawArrays,\n  GeometryDrawElements,\n} from '../types'\n\nexport const isGeometryNode = Symbol('isGeometryNode')\n\nexport class GeometryNode extends Node {\n  index: number\n  attributes: GeometryAttributes\n  drawArrays?: GeometryDrawArrays\n  drawElements?: GeometryDrawElements\n\n  constructor() {\n    super()\n\n    this.index = 0\n    this.attributes = {}\n  }\n\n  [isGeometryNode] = true\n\n  applyProps(nextprops: GeometryNodeProps, prevProps: GeometryNodeProps = {}) {\n    this.applyMatrixProps(nextprops, prevProps)\n\n    if (nextprops.index !== undefined) {\n      this.index = nextprops.index\n    }\n\n    if (nextprops.attributes !== undefined) {\n      this.attributes = nextprops.attributes\n    }\n\n    this.drawArrays = nextprops.drawArrays\n    this.drawElements = nextprops.drawElements\n  }\n}\n"]},"metadata":{},"sourceType":"module"}