{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useMemo } from 'react';\nimport { useDataTexture } from './textures';\nimport warn from 'warning';\nvar prefix = 'react-vertex:';\nexport function useFramebuffer(gl) {\n  _s();\n  var memoized = useMemo(function () {\n    var buffer = gl.createFramebuffer();\n    warn(!!buffer, \"\".concat(prefix, \" Failed to create frame buffer.\"));\n    return buffer;\n  }, [gl]);\n  useEffect(function () {\n    return function () {\n      return gl.deleteFramebuffer(memoized);\n    };\n  }, [gl, memoized]);\n  return memoized;\n}\n_s(useFramebuffer, \"jkdLj0I23GeeO+RQYpblLekjma0=\");\nexport function useFBO(gl, width, height, getTexOpts) {\n  _s2();\n  var tex = useDataTexture(gl, null, width, height, getTexOpts);\n  var fbo = useFramebuffer(gl);\n  var memoized = useMemo(function () {\n    var attachment = gl.COLOR_ATTACHMENT0;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, tex, 0);\n    return {\n      tex: tex,\n      fbo: fbo,\n      attach: function attach(unit) {\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(gl.TEXTURE_2D, tex);\n        return unit;\n      }\n    };\n  }, [gl, fbo, tex]);\n  return memoized;\n}\n_s2(useFBO, \"CYKwcIJtruD5WeHaTl/u9eJWU68=\", false, function () {\n  return [useDataTexture, useFramebuffer];\n});\nexport function useDoubleFBO(gl, width, height, getTexOpts) {\n  _s3();\n  var frameBuffer1 = useFBO(gl, width, height, getTexOpts);\n  var frameBuffer2 = useFBO(gl, width, height, getTexOpts);\n  var memoized = useMemo(function () {\n    var fbo1 = frameBuffer1;\n    var fbo2 = frameBuffer2;\n    return {\n      get read() {\n        return fbo1;\n      },\n      set read(value) {\n        fbo1 = value;\n      },\n      get write() {\n        return fbo2;\n      },\n      set write(value) {\n        fbo2 = value;\n      },\n      swap: function swap() {\n        var temp = fbo1;\n        fbo1 = fbo2;\n        fbo2 = temp;\n      }\n    };\n  }, [frameBuffer1, frameBuffer2]);\n  return memoized;\n}\n_s3(useDoubleFBO, \"y7k6K93HmOuScujb6s7ROvcoxbI=\", false, function () {\n  return [useFBO, useFBO];\n});","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAIA,IAAMC,MAAM,GAAG,eAAf;AAEA,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAAuC;EAAA;EAC5C,IAAMC,QAAQ,GAAGN,OAAO,CAAC,YAAM;IAC7B,IAAMO,MAAM,GAAGF,EAAE,CAACG,iBAAH,EAAf;IAEAN,IAAI,CAAC,CAAC,CAACK,MAAH,YAAcJ,MAAd,qCAAJ;IAEA,OAAOI,MAAP;EACD,CANuB,EAMrB,CAACF,EAAD,CANqB,CAAxB;EAQAN,SAAS,CAAC,YAAM;IACd,OAAO;MAAA,OAAMM,EAAE,CAACI,iBAAH,CAAqBH,QAArB,CAAN;IAAA,CAAP;EACD,CAFQ,EAEN,CAACD,EAAD,EAAKC,QAAL,CAFM,CAAT;EAIA,OAAOA,QAAP;AACD;AAAA,GAdeF,cAAT;AAgBP,OAAO,SAASM,MAAT,CACLL,EADK,EAELM,KAFK,EAGLC,MAHK,EAILC,UAJK,EAKL;EAAA;EACA,IAAMC,GAAG,GAAGb,cAAc,CAACI,EAAD,EAAK,IAAL,EAAWM,KAAX,EAAkBC,MAAlB,EAA0BC,UAA1B,CAA1B;EACA,IAAME,GAAG,GAAGX,cAAc,CAACC,EAAD,CAA1B;EAEA,IAAMC,QAAQ,GAAGN,OAAO,CAAC,YAAM;IAC7B,IAAMgB,UAAU,GAAGX,EAAE,CAACY,iBAAtB;IACAZ,EAAE,CAACa,eAAH,CAAmBb,EAAE,CAACc,WAAtB,EAAmCJ,GAAnC;IACAV,EAAE,CAACe,oBAAH,CAAwBf,EAAE,CAACc,WAA3B,EAAwCH,UAAxC,EAAoDX,EAAE,CAACgB,UAAvD,EAAmEP,GAAnE,EAAwE,CAAxE;IAEA,OAAO;MACLA,GAAG,EAAHA,GADK;MAELC,GAAG,EAAHA,GAFK;MAGLO,MAHK,kBAGEC,IAHF,EAGgB;QACnBlB,EAAE,CAACmB,aAAH,CAAiBnB,EAAE,CAACoB,QAAH,GAAcF,IAA/B;QACAlB,EAAE,CAACqB,WAAH,CAAerB,EAAE,CAACgB,UAAlB,EAA8BP,GAA9B;QACA,OAAOS,IAAP;MACD;IAPI,CAAP;EASD,CAduB,EAcrB,CAAClB,EAAD,EAAKU,GAAL,EAAUD,GAAV,CAdqB,CAAxB;EAgBA,OAAOR,QAAP;AACD;AAAA,IA1BeI,MAAT;EAAA,QAMOT,cAAc,EACdG,cAAc;AAAA;AAqB5B,OAAO,SAASuB,YAAT,CACLtB,EADK,EAELM,KAFK,EAGLC,MAHK,EAILC,UAJK,EAKL;EAAA;EACA,IAAMe,YAAY,GAAGlB,MAAM,CAACL,EAAD,EAAKM,KAAL,EAAYC,MAAZ,EAAoBC,UAApB,CAA3B;EACA,IAAMgB,YAAY,GAAGnB,MAAM,CAACL,EAAD,EAAKM,KAAL,EAAYC,MAAZ,EAAoBC,UAApB,CAA3B;EAEA,IAAMP,QAAQ,GAAGN,OAAO,CAAC,YAAM;IAC7B,IAAI8B,IAAI,GAAGF,YAAX;IACA,IAAIG,IAAI,GAAGF,YAAX;IAEA,OAAO;MACL,IAAIG,IAAJ,GAAW;QACT,OAAOF,IAAP;MACD,CAHI;MAIL,IAAIE,IAAJ,CAASC,KAAT,EAAgB;QACdH,IAAI,GAAGG,KAAP;MACD,CANI;MAOL,IAAIC,KAAJ,GAAY;QACV,OAAOH,IAAP;MACD,CATI;MAUL,IAAIG,KAAJ,CAAUD,KAAV,EAAiB;QACfF,IAAI,GAAGE,KAAP;MACD,CAZI;MAaLE,IAbK,kBAaE;QACL,IAAMC,IAAI,GAAGN,IAAb;QACAA,IAAI,GAAGC,IAAP;QACAA,IAAI,GAAGK,IAAP;MACD;IAjBI,CAAP;EAmBD,CAvBuB,EAuBrB,CAACR,YAAD,EAAeC,YAAf,CAvBqB,CAAxB;EAyBA,OAAOvB,QAAP;AACD;AAAA,IAnCeqB,YAAT;EAAA,QAMgBjB,MAAM,EACNA,MAAM;AAAA","names":["useEffect","useMemo","useDataTexture","warn","prefix","useFramebuffer","gl","memoized","buffer","createFramebuffer","deleteFramebuffer","useFBO","width","height","getTexOpts","tex","fbo","attachment","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","TEXTURE_2D","attach","unit","activeTexture","TEXTURE0","bindTexture","useDoubleFBO","frameBuffer1","frameBuffer2","fbo1","fbo2","read","value","write","swap","temp"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/core/src/hooks/framebuffers.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useDataTexture } from './textures'\nimport warn from 'warning'\n\nimport { GLContext, GetTextureOptions } from '../types'\n\nconst prefix = 'react-vertex:'\n\nexport function useFramebuffer(gl: GLContext) {\n  const memoized = useMemo(() => {\n    const buffer = gl.createFramebuffer()\n\n    warn(!!buffer, `${prefix} Failed to create frame buffer.`)\n\n    return buffer\n  }, [gl])\n\n  useEffect(() => {\n    return () => gl.deleteFramebuffer(memoized)\n  }, [gl, memoized])\n\n  return memoized\n}\n\nexport function useFBO(\n  gl: GLContext,\n  width: number,\n  height: number,\n  getTexOpts: GetTextureOptions,\n) {\n  const tex = useDataTexture(gl, null, width, height, getTexOpts)\n  const fbo = useFramebuffer(gl)\n\n  const memoized = useMemo(() => {\n    const attachment = gl.COLOR_ATTACHMENT0\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, tex, 0)\n\n    return {\n      tex,\n      fbo,\n      attach(unit: number) {\n        gl.activeTexture(gl.TEXTURE0 + unit)\n        gl.bindTexture(gl.TEXTURE_2D, tex)\n        return unit\n      },\n    }\n  }, [gl, fbo, tex])\n\n  return memoized\n}\n\nexport function useDoubleFBO(\n  gl: GLContext,\n  width: number,\n  height: number,\n  getTexOpts: GetTextureOptions,\n) {\n  const frameBuffer1 = useFBO(gl, width, height, getTexOpts)\n  const frameBuffer2 = useFBO(gl, width, height, getTexOpts)\n\n  const memoized = useMemo(() => {\n    let fbo1 = frameBuffer1\n    let fbo2 = frameBuffer2\n\n    return {\n      get read() {\n        return fbo1\n      },\n      set read(value) {\n        fbo1 = value\n      },\n      get write() {\n        return fbo2\n      },\n      set write(value) {\n        fbo2 = value\n      },\n      swap() {\n        const temp = fbo1\n        fbo1 = fbo2\n        fbo2 = temp\n      },\n    }\n  }, [frameBuffer1, frameBuffer2])\n\n  return memoized\n}\n"]},"metadata":{},"sourceType":"module"}