{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport { useEffect, useMemo } from 'react';\nimport warn from 'warning';\nvar prefix = 'react-vertex:';\nexport function useTypedArray(data, format) {\n  _s();\n  var memoized = useMemo(function () {\n    var contents;\n    if (format && typeof format === 'string') {\n      switch (format.toUpperCase()) {\n        case 'U8':\n          contents = Uint8Array.from(data);\n          break;\n        case 'U16':\n          contents = Uint16Array.from(data);\n          break;\n        case 'U32':\n          contents = Uint32Array.from(data);\n          break;\n        case 'I8':\n          contents = Int8Array.from(data);\n          break;\n        case 'I16':\n          contents = Int16Array.from(data);\n          break;\n        case 'I32':\n          contents = Int32Array.from(data);\n          break;\n        case 'F32':\n          contents = Float32Array.from(data);\n          break;\n      }\n    }\n    if (!contents) {\n      if (data instanceof Uint8Array || data instanceof Uint16Array || data instanceof Uint32Array || data instanceof Int8Array || data instanceof Int16Array || data instanceof Int32Array || data instanceof Float32Array) {\n        return data;\n      } else {\n        throw Error('Undable to return typed array instance.');\n      }\n    }\n    return contents;\n  }, [data, format]);\n  return memoized;\n}\n_s(useTypedArray, \"KMI6DIONdD7isGYT+tL7kc0anjg=\");\nexport function useBuffer(gl, data) {\n  _s2();\n  var isIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var format = arguments.length > 3 ? arguments[3] : undefined;\n  var usage = arguments.length > 4 ? arguments[4] : undefined;\n  var contents = useTypedArray(data, format);\n  var memoized = useMemo(function () {\n    var buffer = gl.createBuffer();\n    warn(!!buffer, \"\".concat(prefix, \" Failed to create buffer.\"));\n    return buffer;\n  }, [gl]);\n  useMemo(function () {\n    if (isIndex) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, memoized);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, contents, usage);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, memoized);\n      gl.bufferData(gl.ARRAY_BUFFER, contents, usage);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n  }, [gl, isIndex, usage, contents, memoized]);\n  useEffect(function () {\n    return function () {\n      gl.isBuffer(memoized) && gl.deleteBuffer(memoized);\n    };\n  }, [gl, memoized]);\n  return memoized;\n}\n_s2(useBuffer, \"obgK9cq0wssCFJ5NkesqOxsshvo=\", false, function () {\n  return [useTypedArray];\n});\nexport function useStaticBuffer(gl, data) {\n  _s3();\n  var isIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return useBuffer(gl, data, isIndex, format, gl.STATIC_DRAW);\n}\n_s3(useStaticBuffer, \"fPn0uses6+gLLuyc6r2i3WMICi8=\", false, function () {\n  return [useBuffer];\n});\nexport function useStreamBuffer(gl, data) {\n  _s4();\n  var isIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return useBuffer(gl, data, isIndex, format, gl.STREAM_DRAW);\n}\n_s4(useStreamBuffer, \"fPn0uses6+gLLuyc6r2i3WMICi8=\", false, function () {\n  return [useBuffer];\n});\nexport function useDyanmicBuffer(gl, data) {\n  _s5();\n  var isIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return useBuffer(gl, data, isIndex, format, gl.DYNAMIC_DRAW);\n}\n_s5(useDyanmicBuffer, \"fPn0uses6+gLLuyc6r2i3WMICi8=\", false, function () {\n  return [useBuffer];\n});","map":{"version":3,"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAIA,IAAMC,MAAM,GAAG,eAAf;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAAwCC,MAAxC,EAAmE;EAAA;EACxE,IAAMC,QAAQ,GAAGN,OAAO,CAAC,YAAM;IAC7B,IAAIO,QAAJ;IAEA,IAAIF,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;MACxC,QAAQA,MAAM,CAACG,WAAP,EAAR;QACE,KAAK,IAAL;UACED,QAAQ,GAAGE,UAAU,CAACC,IAAX,CAAgBN,IAAhB,CAAX;UACA;QACF,KAAK,KAAL;UACEG,QAAQ,GAAGI,WAAW,CAACD,IAAZ,CAAiBN,IAAjB,CAAX;UACA;QACF,KAAK,KAAL;UACEG,QAAQ,GAAGK,WAAW,CAACF,IAAZ,CAAiBN,IAAjB,CAAX;UACA;QACF,KAAK,IAAL;UACEG,QAAQ,GAAGM,SAAS,CAACH,IAAV,CAAeN,IAAf,CAAX;UACA;QACF,KAAK,KAAL;UACEG,QAAQ,GAAGO,UAAU,CAACJ,IAAX,CAAgBN,IAAhB,CAAX;UACA;QACF,KAAK,KAAL;UACEG,QAAQ,GAAGQ,UAAU,CAACL,IAAX,CAAgBN,IAAhB,CAAX;UACA;QACF,KAAK,KAAL;UACEG,QAAQ,GAAGS,YAAY,CAACN,IAAb,CAAkBN,IAAlB,CAAX;UACA;MAAA;IAEL;IAED,IAAI,CAACG,QAAL,EAAe;MACb,IACEH,IAAI,YAAYK,UAAhB,IACAL,IAAI,YAAYO,WADhB,IAEAP,IAAI,YAAYQ,WAFhB,IAGAR,IAAI,YAAYS,SAHhB,IAIAT,IAAI,YAAYU,UAJhB,IAKAV,IAAI,YAAYW,UALhB,IAMAX,IAAI,YAAYY,YAPlB,EAQE;QACA,OAAOZ,IAAP;MACD,CAVD,MAUO;QACL,MAAMa,KAAK,CAAC,yCAAD,CAAX;MACD;IACF;IAED,OAAOV,QAAP;EACD,CA9CuB,EA8CrB,CAACH,IAAD,EAAOC,MAAP,CA9CqB,CAAxB;EAgDA,OAAOC,QAAP;AACD;AAAA,GAlDeH,aAAT;AAoDP,OAAO,SAASe,SAAT,CACLC,EADK,EAELf,IAFK,EAML;EAAA;EAAA,IAHAgB,OAGA,uEAHmB,KAGnB;EAAA,IAFAf,MAEA;EAAA,IADAgB,KACA;EACA,IAAMd,QAAQ,GAAGJ,aAAa,CAACC,IAAD,EAAOC,MAAP,CAA9B;EAEA,IAAMC,QAAQ,GAAGN,OAAO,CAAC,YAAM;IAC7B,IAAMsB,MAAM,GAAGH,EAAE,CAACI,YAAH,EAAf;IAEAtB,IAAI,CAAC,CAAC,CAACqB,MAAH,YAAcpB,MAAd,+BAAJ;IAEA,OAAOoB,MAAP;EACD,CANuB,EAMrB,CAACH,EAAD,CANqB,CAAxB;EAQAnB,OAAO,CAAC,YAAM;IACZ,IAAIoB,OAAJ,EAAa;MACXD,EAAE,CAACK,UAAH,CAAcL,EAAE,CAACM,oBAAjB,EAAuCnB,QAAvC;MACAa,EAAE,CAACO,UAAH,CAAcP,EAAE,CAACM,oBAAjB,EAAuClB,QAAvC,EAAiDc,KAAjD;MACAF,EAAE,CAACK,UAAH,CAAcL,EAAE,CAACM,oBAAjB,EAAuC,IAAvC;IACD,CAJD,MAIO;MACLN,EAAE,CAACK,UAAH,CAAcL,EAAE,CAACQ,YAAjB,EAA+BrB,QAA/B;MACAa,EAAE,CAACO,UAAH,CAAcP,EAAE,CAACQ,YAAjB,EAA+BpB,QAA/B,EAAyCc,KAAzC;MACAF,EAAE,CAACK,UAAH,CAAcL,EAAE,CAACQ,YAAjB,EAA+B,IAA/B;IACD;EACF,CAVM,EAUJ,CAACR,EAAD,EAAKC,OAAL,EAAcC,KAAd,EAAqBd,QAArB,EAA+BD,QAA/B,CAVI,CAAP;EAYAP,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACXoB,EAAE,CAACS,QAAH,CAAYtB,QAAZ,KAAyBa,EAAE,CAACU,YAAH,CAAgBvB,QAAhB,CAAzB;IACD,CAFD;EAGD,CAJQ,EAIN,CAACa,EAAD,EAAKb,QAAL,CAJM,CAAT;EAMA,OAAOA,QAAP;AACD;AAAA,IApCeY,SAAT;EAAA,QAOYf,aAAa;AAAA;AA+BhC,OAAO,SAAS2B,eAAT,CACLX,EADK,EAELf,IAFK,EAKL;EAAA;EAAA,IAFAgB,OAEA,uEAFmB,KAEnB;EAAA,IADAf,MACA,uEAD4B,IAC5B;EACA,OAAOa,SAAS,CAACC,EAAD,EAAKf,IAAL,EAAWgB,OAAX,EAAoBf,MAApB,EAA4Bc,EAAE,CAACY,WAA/B,CAAhB;AACD;AAAA,IAPeD,eAAT;EAAA,QAMEZ,SAAS;AAAA;AAGlB,OAAO,SAASc,eAAT,CACLb,EADK,EAELf,IAFK,EAKL;EAAA;EAAA,IAFAgB,OAEA,uEAFmB,KAEnB;EAAA,IADAf,MACA,uEAD4B,IAC5B;EACA,OAAOa,SAAS,CAACC,EAAD,EAAKf,IAAL,EAAWgB,OAAX,EAAoBf,MAApB,EAA4Bc,EAAE,CAACc,WAA/B,CAAhB;AACD;AAAA,IAPeD,eAAT;EAAA,QAMEd,SAAS;AAAA;AAGlB,OAAO,SAASgB,gBAAT,CACLf,EADK,EAELf,IAFK,EAKL;EAAA;EAAA,IAFAgB,OAEA,uEAFmB,KAEnB;EAAA,IADAf,MACA,uEAD4B,IAC5B;EACA,OAAOa,SAAS,CAACC,EAAD,EAAKf,IAAL,EAAWgB,OAAX,EAAoBf,MAApB,EAA4Bc,EAAE,CAACgB,YAA/B,CAAhB;AACD;AAAA,IAPeD,gBAAT;EAAA,QAMEhB,SAAS;AAAA","names":["useEffect","useMemo","warn","prefix","useTypedArray","data","format","memoized","contents","toUpperCase","Uint8Array","from","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Error","useBuffer","gl","isIndex","usage","buffer","createBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","ARRAY_BUFFER","isBuffer","deleteBuffer","useStaticBuffer","STATIC_DRAW","useStreamBuffer","STREAM_DRAW","useDyanmicBuffer","DYNAMIC_DRAW"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/core/src/hooks/buffers.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react'\nimport warn from 'warning'\n\nimport { GLContext, DataFormat, DataArray } from '../types'\n\nconst prefix = 'react-vertex:'\n\nexport function useTypedArray(data: DataArray, format: DataFormat | null) {\n  const memoized = useMemo(() => {\n    let contents\n\n    if (format && typeof format === 'string') {\n      switch (format.toUpperCase()) {\n        case 'U8':\n          contents = Uint8Array.from(data)\n          break\n        case 'U16':\n          contents = Uint16Array.from(data)\n          break\n        case 'U32':\n          contents = Uint32Array.from(data)\n          break\n        case 'I8':\n          contents = Int8Array.from(data)\n          break\n        case 'I16':\n          contents = Int16Array.from(data)\n          break\n        case 'I32':\n          contents = Int32Array.from(data)\n          break\n        case 'F32':\n          contents = Float32Array.from(data)\n          break\n      }\n    }\n\n    if (!contents) {\n      if (\n        data instanceof Uint8Array ||\n        data instanceof Uint16Array ||\n        data instanceof Uint32Array ||\n        data instanceof Int8Array ||\n        data instanceof Int16Array ||\n        data instanceof Int32Array ||\n        data instanceof Float32Array\n      ) {\n        return data\n      } else {\n        throw Error('Undable to return typed array instance.')\n      }\n    }\n\n    return contents\n  }, [data, format])\n\n  return memoized\n}\n\nexport function useBuffer(\n  gl: GLContext,\n  data: DataArray,\n  isIndex: boolean = false,\n  format: DataFormat | null,\n  usage: number,\n) {\n  const contents = useTypedArray(data, format)\n\n  const memoized = useMemo(() => {\n    const buffer = gl.createBuffer()\n\n    warn(!!buffer, `${prefix} Failed to create buffer.`)\n\n    return buffer\n  }, [gl])\n\n  useMemo(() => {\n    if (isIndex) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, memoized)\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, contents, usage)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, memoized)\n      gl.bufferData(gl.ARRAY_BUFFER, contents, usage)\n      gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    }\n  }, [gl, isIndex, usage, contents, memoized])\n\n  useEffect(() => {\n    return () => {\n      gl.isBuffer(memoized) && gl.deleteBuffer(memoized)\n    }\n  }, [gl, memoized])\n\n  return memoized\n}\n\nexport function useStaticBuffer(\n  gl: GLContext,\n  data: DataArray,\n  isIndex: boolean = false,\n  format: DataFormat | null = null,\n) {\n  return useBuffer(gl, data, isIndex, format, gl.STATIC_DRAW)\n}\n\nexport function useStreamBuffer(\n  gl: GLContext,\n  data: DataArray,\n  isIndex: boolean = false,\n  format: DataFormat | null = null,\n) {\n  return useBuffer(gl, data, isIndex, format, gl.STREAM_DRAW)\n}\n\nexport function useDyanmicBuffer(\n  gl: GLContext,\n  data: DataArray,\n  isIndex: boolean = false,\n  format: DataFormat | null = null,\n) {\n  return useBuffer(gl, data, isIndex, format, gl.DYNAMIC_DRAW)\n}\n"]},"metadata":{},"sourceType":"module"}