{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useProgram, useUniform1f, useUniform2fv, useUniform3fv, useWebGLContext, useUniformSampler2d, usePointLightCount, usePointLightUniforms } from '@react-vertex/core';\nimport solidVert from './solid.vert';\nimport solidFrag from './solid.frag';\nimport texturedVert from './textured.vert';\nimport texturedFrag from './textured.frag';\nvar defaultKd = [1.0, 1.0, 1.0];\nvar defaultKa = [1.0, 1.0, 1.0];\nvar defaultNa = 0;\nexport function useLambertSolid(kd, na, ka) {\n  _s();\n  var gl = useWebGLContext();\n  var _usePointLightCount = usePointLightCount(solidVert, solidFrag),\n    _usePointLightCount2 = _slicedToArray(_usePointLightCount, 2),\n    vert = _usePointLightCount2[0],\n    frag = _usePointLightCount2[1];\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd);\n  return program;\n}\n_s(useLambertSolid, \"9EqhHbZHl+QyBsUonTlrIVNNsUM=\", false, function () {\n  return [useWebGLContext, usePointLightCount, useProgram, usePointLightUniforms, useUniform1f, useUniform3fv, useUniform3fv];\n});\nvar uVScale = [1.0, 1.0];\nexport function useLambertTextured(mapKd, na, ka) {\n  _s2();\n  var gl = useWebGLContext();\n  var _usePointLightCount3 = usePointLightCount(texturedVert, texturedFrag),\n    _usePointLightCount4 = _slicedToArray(_usePointLightCount3, 2),\n    vert = _usePointLightCount4[0],\n    frag = _usePointLightCount4[1];\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniformSampler2d(gl, program, 'mapKd', mapKd);\n  useUniform2fv(gl, program, 'uVScale', uVScale);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  return program;\n}\n_s2(useLambertTextured, \"GL2xywDEIwiWZVteZuET/9AOstc=\", false, function () {\n  return [useWebGLContext, usePointLightCount, useProgram, usePointLightUniforms, useUniformSampler2d, useUniform2fv, useUniform1f, useUniform3fv];\n});","map":{"version":3,"mappings":";;;AAAA,SACEA,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,kBAPF,EAQEC,qBARF,QASO,oBATP;AAUA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,IAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AACA,IAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AACA,IAAMC,SAAS,GAAG,CAAlB;AAEA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAAwCC,EAAxC,EAAqDC,EAArD,EAAoE;EAAA;EACzE,IAAMC,EAAE,GAAGf,eAAe,EAA1B;EADyE,0BAEpDE,kBAAkB,CAACE,SAAD,EAAYC,SAAZ,CAFkC;IAAAW;IAElEC,IAFkE;IAE5DC,IAF4D;EAGzE,IAAMC,OAAO,GAAGvB,UAAU,CAACmB,EAAD,EAAKE,IAAL,EAAWC,IAAX,CAA1B;EAEAf,qBAAqB,CAACY,EAAD,EAAKI,OAAL,CAArB;EAEAtB,YAAY,CAACkB,EAAD,EAAKI,OAAL,EAAc,KAAd,EAAqBN,EAAE,IAAIH,SAA3B,CAAZ;EACAX,aAAa,CAACgB,EAAD,EAAKI,OAAL,EAAc,KAAd,EAAqBL,EAAE,IAAIL,SAA3B,CAAb;EAEAV,aAAa,CAACgB,EAAD,EAAKI,OAAL,EAAc,KAAd,EAAqBP,EAAE,IAAIJ,SAA3B,CAAb;EAEA,OAAOW,OAAP;AACD;AAAA,GAbeR,eAAT;EAAA,QACMX,eAAe,EACLE,kBAAkB,EACvBN,UAAU,EAE1BO,qBAAqB,EAErBN,YAAY,EACZE,aAAa,EAEbA,aAAa;AAAA;AAKf,IAAMqB,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,CAAhB;AAEA,OAAO,SAASC,kBAAT,CACLC,KADK,EAELT,EAFK,EAGLC,EAHK,EAIL;EAAA;EACA,IAAMC,EAAE,GAAGf,eAAe,EAA1B;EADA,2BAEqBE,kBAAkB,CAACI,YAAD,EAAeC,YAAf,CAFvC;IAAAgB;IAEON,IAFP;IAEaC,IAFb;EAGA,IAAMC,OAAO,GAAGvB,UAAU,CAACmB,EAAD,EAAKE,IAAL,EAAWC,IAAX,CAA1B;EAEAf,qBAAqB,CAACY,EAAD,EAAKI,OAAL,CAArB;EAEAlB,mBAAmB,CAACc,EAAD,EAAKI,OAAL,EAAc,OAAd,EAAuBG,KAAvB,CAAnB;EAEAxB,aAAa,CAACiB,EAAD,EAAKI,OAAL,EAAc,SAAd,EAAyBC,OAAzB,CAAb;EAEAvB,YAAY,CAACkB,EAAD,EAAKI,OAAL,EAAc,KAAd,EAAqBN,EAAE,IAAIH,SAA3B,CAAZ;EACAX,aAAa,CAACgB,EAAD,EAAKI,OAAL,EAAc,KAAd,EAAqBL,EAAE,IAAIL,SAA3B,CAAb;EAEA,OAAOU,OAAP;AACD;AAAA,IAnBeE,kBAAT;EAAA,QAKMrB,eAAe,EACLE,kBAAkB,EACvBN,UAAU,EAE1BO,qBAAqB,EAErBF,mBAAmB,EAEnBH,aAAa,EAEbD,YAAY,EACZE,aAAa;AAAA","names":["useProgram","useUniform1f","useUniform2fv","useUniform3fv","useWebGLContext","useUniformSampler2d","usePointLightCount","usePointLightUniforms","solidVert","solidFrag","texturedVert","texturedFrag","defaultKd","defaultKa","defaultNa","useLambertSolid","kd","na","ka","gl","_usePointLightCount2","vert","frag","program","uVScale","useLambertTextured","mapKd","_usePointLightCount4"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/material-hooks/src/lambert/index.ts"],"sourcesContent":["import {\n  useProgram,\n  useUniform1f,\n  useUniform2fv,\n  useUniform3fv,\n  useWebGLContext,\n  useUniformSampler2d,\n  usePointLightCount,\n  usePointLightUniforms,\n} from '@react-vertex/core'\nimport solidVert from './solid.vert'\nimport solidFrag from './solid.frag'\nimport texturedVert from './textured.vert'\nimport texturedFrag from './textured.frag'\n\nconst defaultKd = [1.0, 1.0, 1.0]\nconst defaultKa = [1.0, 1.0, 1.0]\nconst defaultNa = 0\n\nexport function useLambertSolid(kd?: number[], na?: number, ka?: number[]) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(solidVert, solidFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd)\n\n  return program\n}\n\nconst uVScale = [1.0, 1.0]\n\nexport function useLambertTextured(\n  mapKd: WebGLTexture | null,\n  na?: number,\n  ka?: number[],\n) {\n  const gl = useWebGLContext()\n  const [vert, frag] = usePointLightCount(texturedVert, texturedFrag)\n  const program = useProgram(gl, vert, frag)\n\n  usePointLightUniforms(gl, program)\n\n  useUniformSampler2d(gl, program, 'mapKd', mapKd)\n\n  useUniform2fv(gl, program, 'uVScale', uVScale)\n\n  useUniform1f(gl, program, 'uNa', na || defaultNa)\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa)\n\n  return program\n}\n"]},"metadata":{},"sourceType":"module"}