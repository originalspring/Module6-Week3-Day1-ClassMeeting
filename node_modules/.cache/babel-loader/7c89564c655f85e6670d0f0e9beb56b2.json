{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar PointLights = /*#__PURE__*/function () {\n  function PointLights() {\n    _classCallCheck(this, PointLights);\n    this.instances = [];\n    this.diffuse = [];\n    this.position = [];\n  }\n  _createClass(PointLights, [{\n    key: \"add\",\n    value: function add() {\n      var diffuse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\n      var index = this.instances.length;\n      var light = {\n        index: index\n      };\n      this.diffuse = [].concat(_toConsumableArray(this.diffuse), _toConsumableArray(diffuse));\n      this.position = [].concat(_toConsumableArray(this.position), _toConsumableArray(position));\n      this.instances.push(light);\n      return light;\n    }\n  }, {\n    key: \"updateDiffuse\",\n    value: function updateDiffuse(_ref, diffuse) {\n      var index = _ref.index;\n      var nextDiffuse = _toConsumableArray(this.diffuse);\n      nextDiffuse[index * 3 + 0] = diffuse[0];\n      nextDiffuse[index * 3 + 1] = diffuse[1];\n      nextDiffuse[index * 3 + 2] = diffuse[2];\n      this.diffuse = nextDiffuse;\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(_ref2, position) {\n      var index = _ref2.index;\n      var nextPosition = _toConsumableArray(this.position);\n      nextPosition[index * 3 + 0] = position[0];\n      nextPosition[index * 3 + 1] = position[1];\n      nextPosition[index * 3 + 2] = position[2];\n      this.position = nextPosition;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(_ref3) {\n      var index = _ref3.index;\n      var len = this.instances.length * 3;\n      var diffuse = [];\n      var position = [];\n      for (var i = 0; i < len; i++) {\n        if (i < index * 3 && i > index * 3 + 2) {\n          diffuse.push(this.diffuse[i]);\n          position.push(this.position[i]);\n        }\n      }\n      var nextInstances = [];\n      for (var _i = 0; _i < this.instances.length; _i++) {\n        if (this.instances[_i].index < index) {\n          nextInstances.push(this.instances[_i]);\n        } else if (this.instances[_i].index > index) {\n          this.instances[_i].index = this.instances[_i].index - 1;\n          nextInstances.push(this.instances[_i]);\n        }\n      }\n      this.diffuse = diffuse;\n      this.position = position;\n      this.instances = nextInstances;\n    }\n  }]);\n  return PointLights;\n}();\nexport { PointLights as default };","map":{"version":3,"mappings":"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","names":["PointLights","instances","diffuse","position","index","length","light","push","nextDiffuse","nextPosition","len","i","nextInstances"],"sources":["/Users/meishenyin/Desktop/Westcliff/3apps/src/spheres/node_modules/@react-vertex/core/src/lights/PointsLights.ts"],"sourcesContent":["type PointLightInstance = { index: number }\n\nexport default class PointLights {\n  instances: PointLightInstance[] = []\n\n  diffuse: number[] = []\n  position: number[] = []\n\n  add(diffuse = [0, 0, 0], position = [0, 0, 0]) {\n    const index = this.instances.length\n    const light = { index }\n\n    this.diffuse = [...this.diffuse, ...diffuse]\n    this.position = [...this.position, ...position]\n\n    this.instances.push(light)\n\n    return light\n  }\n\n  updateDiffuse({ index }: PointLightInstance, diffuse: number[]) {\n    const nextDiffuse = [...this.diffuse]\n    nextDiffuse[index * 3 + 0] = diffuse[0]\n    nextDiffuse[index * 3 + 1] = diffuse[1]\n    nextDiffuse[index * 3 + 2] = diffuse[2]\n\n    this.diffuse = nextDiffuse\n  }\n\n  updatePosition({ index }: PointLightInstance, position: number[]) {\n    const nextPosition = [...this.position]\n    nextPosition[index * 3 + 0] = position[0]\n    nextPosition[index * 3 + 1] = position[1]\n    nextPosition[index * 3 + 2] = position[2]\n\n    this.position = nextPosition\n  }\n\n  remove({ index }: PointLightInstance) {\n    const len = this.instances.length * 3\n\n    const diffuse = []\n    const position = []\n\n    for (let i = 0; i < len; i++) {\n      if (i < index * 3 && i > index * 3 + 2) {\n        diffuse.push(this.diffuse[i])\n        position.push(this.position[i])\n      }\n    }\n\n    const nextInstances = []\n\n    for (let i = 0; i < this.instances.length; i++) {\n      if (this.instances[i].index < index) {\n        nextInstances.push(this.instances[i])\n      } else if (this.instances[i].index > index) {\n        this.instances[i].index = this.instances[i].index - 1\n        nextInstances.push(this.instances[i])\n      }\n    }\n\n    this.diffuse = diffuse\n    this.position = position\n    this.instances = nextInstances\n  }\n}\n"]},"metadata":{},"sourceType":"module"}